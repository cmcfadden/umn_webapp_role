---
- block:
  - name: "Install git"
    yum:
      pkg: "git"
      state: "present"
  - name: "Open https and http ports in firewalld"
    firewalld:
      service: "{{ item[0] }}"
      permanent: yes
      state: enabled
      immediate: yes
      zone: "{{ item[1] }}"
    loop: "{{ ['http', 'https'] | product(['public', 'Campus', 'Bastions']) | list}}"
  - name: "Create /var/www/ if it doesn't exist"
    file:
      path: "/var/www/"
      state: directory
      owner: "{{ deploy_user }}"
      group: "nginx"
      mode: "0755"
  - name: "use acl to grant nginx access to all files in /var/www/, recursively"
    acl:
      path: "/var/www/"
      entity: "nginx"
      etype: "user"
      permissions: "rx"
      recursive: yes
      state: "present"
      default: yes
  - name: Create /var/www/<appname_short>
    file:
      path: "/var/www/{{ appname_short }}/"
      state: directory
      owner: "{{ deploy_user }}"
      group: "nginx"
      mode: "0755"
    become: yes
  - name: "Set SELinux context for /var/www/<appname_short>/"
    community.general.sefcontext:
      target: "/var/www/{{ appname_short}}(/.*)?"
      setype: "httpd_sys_content_t"
      state: "present"
  - name: "Apply SELinux context to existing files in /var/www/<appname_short>/"
    command: "restorecon -Rv /var/www/{{ appname_short }}"
  - name: "Grant deploy user permissions to write to var/www/<appname_short> using an acl"
    acl:
      path: "/var/www/{{ appname_short }}/"
      entity: "{{ deploy_user }}"
      etype: "user"
      permissions: "rwx"
      state: "present"
    when: deploy_user != None
  - name: set a rwx mask for /var/www/<appname_short>
    acl:
      path: "/var/www/{{ appname_short }}/"
      etype: "mask"
      permissions: "rwx"
      state: "present"
  - name: "enable SELinux boolean to allow httpd to make network connections"
    seboolean:
      name: "httpd_can_network_connect"
      state: "on"
      persistent: true
  - name: "enable SELinux boolean to allow httpd to make network connections"
    seboolean:
      name: "httpd_unified"
      state: "on"
      persistent: true
  - name: "enable SELinux boolean to allow httpd to execmem"
    seboolean:
      name: "httpd_execmem"
      state: "on"
      persistent: true
  - name: "enable SELinux boolean to allow setrlimits"
    seboolean:
      name: "httpd_setrlimit"
      state: "on"
      persistent: true
  - name: Set umask in .bashrc
    lineinfile:
      path: "/home/{{ deploy_user }}/.bashrc"
      regexp: '^umask'
      line: "umask 0027"
      create: yes
      owner: "{{ deploy_user }}"
      group: "{{ deploy_user }}"
      mode: '0644'
  become: true